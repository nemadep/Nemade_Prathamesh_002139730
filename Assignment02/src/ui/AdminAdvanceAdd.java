/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author prathameshnemade
 */
public class AdminAdvanceAdd extends javax.swing.JPanel {

    public JPanel jPanelMainRight;

    /**
     * Creates new form AdminAdvanceAdd
     */
    public AdminAdvanceAdd(JPanel jPanelMainRight) {
        initComponents();
        this.jPanelMainRight = jPanelMainRight;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uploadFileJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        uploadFileJButton.setText("Upload File");
        uploadFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFileJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Click to upload file: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadFileJButton)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(uploadFileJButton))
                .addContainerGap(257, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void uploadFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFileJButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter jsonFilter = new FileNameExtensionFilter("only json", "json");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(jsonFilter);
        int option = fileChooser.showOpenDialog(jPanelMainRight);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                parseJSON(file.getAbsolutePath());
            } catch (IOException ex) {
                Logger.getLogger(AdminAdvanceAdd.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(AdminAdvanceAdd.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_uploadFileJButtonActionPerformed

    private void parseJSON(String path) throws IOException, ParseException {
        JSONParser jsonParser = new JSONParser();
        try {
            ArrayList uploadedCars = (ArrayList) jsonParser.parse(new FileReader(path));

            for (Object car : uploadedCars) {
                JSONObject car1 = (JSONObject) car;
                System.out.println(car1.get("availabilityFrom"));
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminAdvanceAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton uploadFileJButton;
    // End of variables declaration//GEN-END:variables
}
