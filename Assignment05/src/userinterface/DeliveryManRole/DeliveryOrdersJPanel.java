/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderAssignmentRequest;
import Business.WorkQueue.OrderDelieveryRequest;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.JSplitPane;

/**
 *
 * @author prathameshnemade
 */
public class DeliveryOrdersJPanel extends javax.swing.JPanel {

    EcoSystem system;
    UserAccount account;
    JSplitPane jSplitPanel;
    ArrayList<OrderAssignmentRequest> unAssignedRequests = new ArrayList<OrderAssignmentRequest>();
    OrderAssignmentRequest selectedWorkRequest;

    DeliveryOrdersJPanel(EcoSystem system, UserAccount account, JSplitPane jSplitPane) {
        this.system = system;
        this.account = account;
        this.jSplitPanel = jSplitPanel;
        initComponents();
        _getUnAssignedOrders();
    }

    public void _getUnAssignedOrders() {
        DefaultListModel model = new DefaultListModel();
        this.ordersJList.setModel(model);
        unAssignedRequests = new ArrayList<OrderAssignmentRequest>();

        for (int i = 0; i < this.system.getWorkQueue().getWorkRequestList().size(); i++) {
            WorkRequest ongoing = this.system.getWorkQueue().getWorkRequestList().get(i);
            if (ongoing instanceof OrderAssignmentRequest) {
                OrderAssignmentRequest onGo = (OrderAssignmentRequest) ongoing;
                System.out.println(onGo.getAssignmentTo());
                if ((onGo.getAssignmentStatus().toString().equals("READYFORPICKUP") || onGo.getAssignmentStatus().toString().equals("PICKED")) && onGo.getAssignmentTo() != null && onGo.getAssignmentTo().getUsername().toString().equals(this.account.getUsername().toString())) {
                    String address = ongoing.getAddress().toString();
                    Long resWorkId = ((OrderAssignmentRequest) ongoing).getAssignmentId();
                    model.addElement(String.valueOf(resWorkId) + " - " + address);
                    unAssignedRequests.add((OrderAssignmentRequest) ongoing);
                }
            }
        }
        this.ordersJList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersJList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        orderJComboBox = new javax.swing.JComboBox<>();
        addJButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        addressJLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        customerJLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        createdAtJLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        commentsJLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Orders:");

        ordersJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ordersJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ordersJList);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Status:");

        orderJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PICKED", "DELIVERED" }));
        orderJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                orderJComboBoxItemStateChanged(evt);
            }
        });
        orderJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderJComboBoxActionPerformed(evt);
            }
        });

        addJButton.setBackground(new java.awt.Color(200, 203, 178));
        addJButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        addJButton.setForeground(new java.awt.Color(67, 100, 100));
        addJButton.setText("DONE");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Sans Oriya", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(67, 100, 100));
        jLabel8.setText("Address");

        addressJLabel.setFont(new java.awt.Font("Noto Sans Kannada", 1, 14)); // NOI18N
        addressJLabel.setForeground(new java.awt.Color(67, 100, 100));
        addressJLabel.setText("Select a order!");

        jLabel9.setFont(new java.awt.Font("Noto Sans Oriya", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(67, 100, 100));
        jLabel9.setText("Customer");

        customerJLabel.setFont(new java.awt.Font("Noto Sans Kannada", 1, 14)); // NOI18N
        customerJLabel.setForeground(new java.awt.Color(67, 100, 100));
        customerJLabel.setText("Select a order!");

        jLabel6.setFont(new java.awt.Font("Noto Sans Oriya", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(67, 100, 100));
        jLabel6.setText("Order Created At:");

        createdAtJLabel.setFont(new java.awt.Font("Noto Sans Kannada", 1, 14)); // NOI18N
        createdAtJLabel.setForeground(new java.awt.Color(67, 100, 100));
        createdAtJLabel.setText("Select a order!");

        jLabel7.setFont(new java.awt.Font("Noto Sans Oriya", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(67, 100, 100));
        jLabel7.setText("Comments");

        commentsJLabel.setFont(new java.awt.Font("Noto Sans Kannada", 1, 14)); // NOI18N
        commentsJLabel.setForeground(new java.awt.Color(67, 100, 100));
        commentsJLabel.setText("Select a order!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(orderJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createdAtJLabel)
                                    .addComponent(addressJLabel)
                                    .addComponent(commentsJLabel)
                                    .addComponent(customerJLabel)))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(createdAtJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(commentsJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(addressJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(customerJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ordersJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ordersJListValueChanged
        Integer seletedIndex = ordersJList.getSelectedIndex();
        if (seletedIndex != -1) {
            this.selectedWorkRequest = this.unAssignedRequests.get(seletedIndex);
            this.createdAtJLabel.setText(this.selectedWorkRequest.getOrderAssignmentAt().toString());
            this.commentsJLabel.setText(this.selectedWorkRequest.getAssignmentComments());
            this.addressJLabel.setText(this.selectedWorkRequest.getAddress());
            this.customerJLabel.setText(this.selectedWorkRequest.getReceiver().getUsername());
        }
    }//GEN-LAST:event_ordersJListValueChanged

    private void orderJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_orderJComboBoxItemStateChanged
        //todo
    }//GEN-LAST:event_orderJComboBoxItemStateChanged

    private void orderJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderJComboBoxActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        for (int i = 0; i < this.system.getWorkQueue().getWorkRequestList().size(); i++) {
            WorkRequest ongoing = this.system.getWorkQueue().getWorkRequestList().get(i);
            if (ongoing instanceof OrderAssignmentRequest) {
                OrderAssignmentRequest onGo = (OrderAssignmentRequest) ongoing;
                if (onGo.getAssignmentId() == this.selectedWorkRequest.getAssignmentId()) {
                    onGo.setAssignmentStatus(this.orderJComboBox.getSelectedItem().toString());

                    if (this.orderJComboBox.getSelectedItem().toString() == "DELIVERED") {
                        onGo.setResolveDate(new Date());
                    }
//                    if (this.orderJComboBox.getSelectedItem().toString() == "DELIVERED") {
                    onGo.setStatus(this.orderJComboBox.getSelectedItem().toString());
                    for (int j = 0; j < this.system.getWorkQueue().getWorkRequestList().size(); j++) {
                        WorkRequest ongoing1 = this.system.getWorkQueue().getWorkRequestList().get(j);
                        if (ongoing1 instanceof OrderDelieveryRequest) {
                            OrderDelieveryRequest toChnage = (OrderDelieveryRequest) ongoing1;
                            if (toChnage.getDeliveryRequestId() == onGo.getAssignmentId()) {
                                toChnage.setDeliveryStatus(this.orderJComboBox.getSelectedItem().toString());
                                toChnage.setStatus(this.orderJComboBox.getSelectedItem().toString());

                                if (this.orderJComboBox.getSelectedItem().toString() == "DELIVERED") {
                                    toChnage.setResolveDate(new Date());
                                }
                            }
                        } else if (ongoing1 instanceof OrderWorkRequest) {
                            OrderWorkRequest toChnage = (OrderWorkRequest) ongoing1;
                            if ((toChnage.getOrderWorkRequestId()) == onGo.getAssignmentId()) {
                                toChnage.setOrderRequestStatus(this.orderJComboBox.getSelectedItem().toString());
                                toChnage.setStatus(this.orderJComboBox.getSelectedItem().toString());

                                if (this.orderJComboBox.getSelectedItem().toString() == "DELIVERED") {
                                    toChnage.setResolveDate(new Date());
                                }
                            }
                        }
//                        }
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(this, "Order Status Successfully!", "Order Status Details", INFORMATION_MESSAGE);

        this.createdAtJLabel.setText("Select a order!");
        this.commentsJLabel.setText("Select a order!");
        this.addressJLabel.setText("Select a order!");
        this.customerJLabel.setText("Select a order!");
        _getUnAssignedOrders();

    }//GEN-LAST:event_addJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JLabel commentsJLabel;
    private javax.swing.JLabel createdAtJLabel;
    private javax.swing.JLabel customerJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> orderJComboBox;
    private javax.swing.JList<String> ordersJList;
    // End of variables declaration//GEN-END:variables
}
